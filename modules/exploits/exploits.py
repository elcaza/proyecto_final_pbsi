from base64 import b64decode
import os

class Exploit():
    def __init__(self, nombre, contenido, software, biblioteca, gestor_contenido):
        self.nombre = nombre
        self.contenido = contenido
        self.software = software
        self.biblioteca = biblioteca
        self.gestor_contenido = gestor_contenido
        self.get_extension()
        self.get_ruta()

    def crear_archivo_exploit(self):
        with open(self.nombre,"wb") as archivo_exploit:
            archivo_exploit.write(b64decode(self.contenido))
        return True

    def get_extension(self):
        self.extension = self.nombre.split(".")
        if len(self.extension) == 1:
            self.extension = ""
            return self.extension
        self.extension = self.extension[-1]
        return self.extension

    def get_nombre(self):
        return self.nombre
    
    def get_contenido(self):
        return self.contenido

    def get_software(self):
        return self.software
        
    def get_biblioteca(self):
        return self.biblioteca

    def get_gestor_contenido(self):
        return self.gestor_contenido

    def get_ruta(self):
        self.ruta = os.path.abspath(os.path.dirname(__file__))
        return self.ruta 

    def set_nombre(self,nombre):
        self.nombre = nombre
    
    def set_contenido(self,contenido):
        self.contenido = contenido

    def set_software(self,software):
        self.software = software
        
    def set_biblioteca(self,biblioteca):
        self.biblioteca = biblioteca

    def set_gestor_contenido(self,gestor_contenido):
        self.gestor_contenido = gestor_contenido

    def cargar_datos_mongo(self):
        return {"nomnbre":self.nombre,"ruta":self.ruta,"software":self.software,"biblioteca":self.biblioteca,"gestor_contenido":self.gestor_contenido}

def execute(nombre,contenido,software,biblioteca,gestor_contenido):
    exploit = Exploit(nombre,contenido,software,biblioteca,gestor_contenido)
    exploit.crear_archivo_exploit()
    return exploit.cargar_datos_mongo()

#con = Conector()
#con.exploit_cargar_datos(execute("exploit1.py","aG9sYSBqYWphaiBlcyBhdW5zZGFzbGRtIHFtMzQtaTEzeWU4Zy1kaXAyaDM0MjB7b2RueyAKcHJ1ZWJh","Javascript","Math",""))