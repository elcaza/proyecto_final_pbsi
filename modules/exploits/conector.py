from os import error
from pymongo import MongoClient, errors
import re
import strings
from time import sleep
class Conector():
    def __init__(self):        
        self.conexion = MongoClient(strings.MONGO_URI)
        self.base_datos = self.conexion[strings.BASE_DATOS]
        if self.conexion_estado() == False:
            print("Error: No se logró conectar a la Base de datos")

    def set_conexion(self):
        self.conexion = MongoClient(strings.MONGO_URI)
    
    def set_base_datos(self):
        self.base_datos = self.conexion[strings.BASE_DATOS]

    def get_conexion(self):
        return self.conexion_base_datos

    def exploit_insertar_datos(self,json_cargar_datos):
        coleccion_exploits = self.base_datos[strings.COLECCION_EXPLOITS]
        coleccion_exploits.insert_one(json_cargar_datos)

    def exploit_consulta_nombres(self):
        with self.conexion.start_session() as sesion:
            with sesion.start_transaction():
                coleccion_exploits = self.base_datos[strings.COLECCION_EXPLOITS]
                coleccion_exploits.find({},{"nombre":1})
                #{'_id': ObjectId('600bc3e28aaee9e59b5dbab8'), 'nombre': 'pruebap.py'}
                return True

    def exploit_consulta_registro(self,nombre):
        with self.conexion.start_session() as sesion:
            with sesion.start_transaction():
                coleccion_exploits = self.base_datos[strings.COLECCION_EXPLOITS]
                coleccion_exploits.find_one({"nombre":nombre})
                #{'_id': ObjectId('600ca7cea3005813de0d69dd'), 'nomnbre': 'exploit1.py', 'ruta': '/home/kali/Proyectos/proyecto_final_pbsi/modules/exploits', 'software': 'Javascript', 'biblioteca': 'Math', 'gestor_contenido': ''}
                return True

    def exploit_actualizar_datos(self,json_cargar_datos):
        with self.conexion.start_session() as sesion:
            with sesion.start_transaction():
                coleccion_exploits = self.base_datos[strings.COLECCION_EXPLOITS]
                coleccion_exploits.update_one({"nombre":json_cargar_datos["nombre"]},{"$set":{
                    "nombre":json_cargar_datos["nombre"],
                    "ruta":json_cargar_datos["ruta"],
                    "software":json_cargar_datos["software"],
                    "biblioteca":json_cargar_datos["biblioteca"],
                    "gestor_contenido":json_cargar_datos["gestor_contenido"]}})

    def conexion_estado(self):
        try:
            self.conexion.server_info()
        except errors.ServerSelectionTimeoutError:
            return False
        return True
        
    def conexion_reinicio(self):
        try:
            self.conexion = MongoClient(strings.MONGO_URI)
            self.base_datos = self.conexion[strings.BASE_DATOS]
            return True
        except errors.ServerSelectionTimeoutError:
            print("Error: No se logró conectar a la Base de datos")
        return False

con = Conector()
#con.exploit_consulta_registro("exploit1.py")
#con.conexion_estado()

con.exploit_actualizar_datos({"nombre" : "pruebap.py", "ruta" : "/home/kali/Proyectos/proyecto_final_pbsi/modules/exploits", "software" : "asl", "biblioteca" : "ab", "gestor_contenido" : "ac" })